# Translations template for PROJECT.
# Copyright (C) 2021 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2021-06-11 11:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: mapping/process-level-implementation.csv
#: mapping/process-level-procurement.csv mapping/project-level-completion.csv
#: mapping/project-level-identification.csv
#: mapping/project-level-preparation.csv
#: mapping/reactive-process-level-contract.csv
#: mapping/reactive-process-level-implementation.csv
#: mapping/reactive-process-level-procurement.csv
#: mapping/reactive-project-level-completion.csv
#: mapping/reactive-project-level-identification-preparation.csv
msgid "CoST IDS element"
msgstr "Elemento de CoST IDS"

#: mapping/process-level-implementation.csv
#: mapping/process-level-procurement.csv mapping/project-level-completion.csv
#: mapping/project-level-identification.csv
#: mapping/project-level-preparation.csv
msgid "CoST IDS draft definition"
msgstr "Definici√≥n de CoST IDS"

#: mapping/process-level-implementation.csv
#: mapping/process-level-procurement.csv mapping/project-level-completion.csv
#: mapping/project-level-identification.csv
#: mapping/project-level-preparation.csv
#: mapping/reactive-process-level-contract.csv
#: mapping/reactive-process-level-implementation.csv
#: mapping/reactive-process-level-procurement.csv
#: mapping/reactive-project-level-completion.csv
#: mapping/reactive-project-level-identification-preparation.csv
msgid "Mapping to OC4IDS"
msgstr ""

#: mapping/process-level-implementation.csv
#: mapping/process-level-procurement.csv mapping/project-level-completion.csv
#: mapping/project-level-identification.csv
#: mapping/project-level-preparation.csv
#: mapping/reactive-process-level-contract.csv
#: mapping/reactive-process-level-implementation.csv
#: mapping/reactive-process-level-procurement.csv
#: mapping/reactive-project-level-completion.csv
#: mapping/reactive-project-level-identification-preparation.csv
msgid "Mapping from OCDS"
msgstr "Mapeo desde OCDS"

#. Mapping from OCDS
#: mapping/process-level-implementation.csv:1
#: mapping/process-level-implementation.csv:2
msgid ""
"*Monitor `/contracts/value` for changes. Copy "
"`/contracts/amendments/description` to `.description` and `/date` to "
"`.date`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-implementation.csv:3
msgid ""
"*Monitor `/contracts/period` for changes. Copy "
"`/contracts/amendments/description` to `.description` and `/date` to "
"`.date`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-implementation.csv:4
msgid ""
"*Monitor `/contracts/description`, `/contracts/items` and "
"`/contracts/implementation/milestones` for changes. Copy "
"`/contracts/amendments/description` to `.description` and `/date` to "
"`.date`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-implementation.csv:5
#: mapping/process-level-implementation.csv:6
msgid "*Copy `contracts/amendments/rationale` to `.rationale`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:1
#: mapping/process-level-procurement.csv:2
#: mapping/reactive-project-level-identification-preparation.csv:5
msgid ""
"Check the `/parties` array for `Organization` objects with "
"'procuringEntity' in `/roles`. Copy each object to the `parties` array in"
" OC4IDS. If there is more than one procuring entity, do not set "
"`.summary.tender.procuringEntity.name` and "
"`.summary.tender.procuringEntity.id`; otherwise, set them to the "
"procuring entity's `.name` and `.id`."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:3
msgid ""
"Check the `/parties` array for `Organization` objects with "
"'administrativeEntity' in `/roles`. Copy each object to the `parties` "
"array in OC4IDS. If there is more than one procuring entity, do not set "
"`.summary.tender.administrativeEntity.name` and "
"`.summary.tender.administrativeEntity.id`; otherwise, set them to the "
"procuring entity's `.name` and `.id`."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:4
msgid ""
"Set `.summary.status` to a value from the contractingProcessStatus "
"codelist according to the business logic in the codelist."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:5
msgid ""
"Set `.summary.tender.procurementMethod` and "
"`.summary.tender.procurementMethodDetails`to the values of "
"`/tender/procurementMethod` and `/tender/procurementMethodDetails` "
"respectively."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:6
msgid ""
"*Map from `/tender/items/classification` or "
"`/tender/items/additionalClassifications` or infer from "
"`/tender/description`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:7
msgid ""
"Set `.summary.numberOfTenderers` to the value of "
"`/tender/numberOfTenderers`."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:8
msgid ""
"Check the individual releases for the contracting process and set "
"`.summary.tender.costEstimate` to the value of `/tender/value` in the "
"most recent release with `/tender/status` set to 'planning'."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:9
msgid ""
"If the contracting process has only one `Contract` object in "
"`/contracts`, set `.summary.title` to the value of the contract's "
"`/title`; if not available and the contracting process has only one "
"`Award` object in `/awards`, use its `/title`. Otherwise, use "
"`/tender/title`."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:10
msgid ""
"Check the `/parties` array for `Organization` objects with 'supplier' in "
"`/roles`. For each such object, copy it to the `parties` array in OC4IDS,"
" add an `OrganizationReference` object to `.summary.suppliers` and set "
"the `.name` and `.id` of the `OrganizationReference` to the `.name` and "
"`.id` of the `Organization`."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:11
msgid ""
"If the value of `/value/currency` is the same for all `Award` objects in "
"`/awards`, set `.summary.contractValue.amount` to the sum of "
"`/value/amount` in each `Award` object and set "
"`.summary.contractValue.currency` to the value of `/value/currency`.  "
"*Otherwise, convert `/value/amount` in each `Award` object to a base "
"currency, set `.summary.contractValue.amount` to the sum of the converted"
" values and set `.summary.contractValue.currency` to the base currency.*"
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:12
msgid ""
"If there is more than one `Contract` object in `/contracts` or more than "
"one `Award` object in `/awards`, set `.summary.description` to the value "
"of `/tender/description`; if unavailable and if there is only one `Item` "
"object in `/tender/items`, then set `.summary.description` to the value "
"of the item's `/description`.\n"
"\n"
"Otherwise, if there is only one `Award` or `Contract` object with a "
"`/description` field, set `.summary.description` to the value of the "
"object's `/description`.\n"
"\n"
"Otherwise, if there is only one `Item` with a `/description` field in "
"`/awards/items` and `/contracts/items`, set `.summary.description` to the"
" value of the item's `/description`."
msgstr ""

#. Mapping from OCDS
#: mapping/process-level-procurement.csv:13
msgid ""
"Set `.summary.contractPeriod.startDate` to the earliest "
"`/contractPeriod/startDate` of all `Award` objects in `/awards` and set "
"`.summary.contractPeriod.endDate` to the latest `/contractPeriod/endDate`"
" of all `Award` objects in `/awards`; if not available,  set "
"`.summary.contractPeriod` to the value of `/tender/contractPeriod`."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-completion.csv:1
msgid "*Infer from `/tag` of most recent release.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-completion.csv:2
msgid ""
"*Infer projected cost from `/contracts/value` and infer actual cost from "
"`/contracts/implementation/finalValue` (Contract completion extension); "
"if not available, infer from total of "
"`/contracts/implementation/transactions/value`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-completion.csv:3
msgid ""
"*Infer from `/contracts/implementation/endDate` (Contract completion "
"extension); if not available, infer from `/contracts/period/endDate`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-completion.csv:4
msgid ""
"*Check `/planning/documents` for documents with `/type` set to "
"`projectScope` or infer from `/contracts/items` or "
"`/contracts/implementation/milestones`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-completion.csv:5
msgid ""
"*Infer from `/contracts/implementation/endDateDetails` and "
"`/contracts/implementation/finalValueDetails` (Contract completion "
"extension); if not available, infer from `/contracts/amendments`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-completion.csv:6
msgid ""
"Check the `/contracts/implementation/documents` array for `Document` "
"objects with `/type` set to 'finalAudit'. Copy each such object to the "
"`documents` array."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-identification.csv:1
msgid ""
"Check the `/parties` array for `Organization` objects with 'buyer' in "
"`/roles`. Copy each object to the `parties` array in OC4IDS and add "
"'publicAuthority' to its `.roles`. *If there is more than one public "
"authority, do not set `publicAuthority.name` and `publicAuthority.id`; "
"otherwise, set them to the public authority's `.name` and `.id`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-identification.csv:2
msgid ""
"*Copy the `Classification` object from `/planning/project/sector` "
"(Project extension) to the `additionalClassifications` array. "
"Additionally, map the classification used in OCDS to the projectSector "
"codelist and publish one or more values in `sector`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-identification.csv:3
msgid ""
"Copy each `Classification` object from the "
"`/planning/project/additionalClassifications` array (Project extension) "
"to the `additionalClassifications` array."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-identification.csv:4
msgid ""
"Set `title` to the value of `/planning/project/title` (Project "
"extension); if not available, optionally use `/tender/title`."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-identification.csv:5
msgid ""
"Copy each `Location` object from `/planning/project/locations` (Project "
"extension) to the `locations` array; if not available, optionally use "
"`/tender/items/deliveryLocation` or `/tender/items/deliveryAddress` "
"(Location extension). Add an `.id` to each `Location` object."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-identification.csv:6
msgid ""
"Set `purpose` to the value of `/planning/rationale`; if not available, "
"optionally check the `/planning/documents` array for `Document` objects  "
"with `/type` set to 'needsAssessment' and copy each object to the "
"`documents` array."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-identification.csv:7
msgid ""
"Set `description` to the value of `/planning/project/description` "
"(Project extension); if not available, optionally use "
"`/tender/description`."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-preparation.csv:1
msgid ""
"Check the `/planning/documents` array for `Document` objects with `/type`"
" set to 'projectScope' and copy each object to the `documents` array; if "
"not available, optionally copy `Item` objects from `/tender/items` to "
"`contractingProcesses.summary.tender.items` and copy `Milestone` objects "
"from `/tender/milestones` to "
"`contractingProcesses.summary.tender.milestones`."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-preparation.csv:2
msgid ""
"Check the `/planning/documents` array for `Document` objects with `/type`"
" set to 'environmentalImpact'. Copy each object to the `documents` array."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-preparation.csv:3
msgid ""
"Check the `/planning/documents` array for `Document` objects with `/type`"
" set to 'landAndSettlementImpact'. Copy each object to the `documents`."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-preparation.csv:4
msgid ""
"Check the `/parties` array for `Organization` objects with  `/role` set "
"to 'buyer'. Copy each object to the `parties` array in OC4IDS and add "
"'publicAuthority' to its `.roles`."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-preparation.csv:5
msgid ""
"Check the `/parties` array for `Organization` objects referenced in "
"`/planning/budgetBreakdown/sourceParty` (Budget breakdown extension), "
"copy each object to the `parties` array in OC4IDS and add 'funder' to its"
" `.roles`; if not available, check the `/parties` array for parties with "
"'funder' in `/roles` and copy each object to the `parties` array in "
"OC4IDS."
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-preparation.csv:6
msgid ""
"If the project has only one contracting process, set `budget.amount` and "
"`budget.currency` in OC4IDS to the values of `/budget/amount` and "
"`/budget/currency`. If the project has more than one contracting process "
"and the value of `/budget/currency` is the same in all contracting "
"processes, set `budget.amount` in OC4IDS to the sum of the value of "
"`/budget/amount` in each contracting process and set `budget.currency` in"
" OC4IDS to the value of `/budget/currency`.  *Otherwise, convert the "
"values of `/budget/amount` in each contracting process to a base "
"currency, set `budget.amount` in OC4IDS to the sum of the converted "
"values and set `budget.currency` in OC4IDS to the base currency.*"
msgstr ""

#. Mapping from OCDS
#: mapping/project-level-preparation.csv:7
msgid ""
"Check the `/planning/documents` array for `Document` objects with `/type`"
" set to 'budgetApproval' and copy each object to the `documents` array; "
"*if not available, optionally check `/planning/milestones` for "
"`Milestone` objects with `/type` set to 'approval' and set "
"`budget/approvalDate` to the value of `/dateMet`.*"
msgstr ""

#: mapping/reactive-process-level-contract.csv
#: mapping/reactive-process-level-implementation.csv
#: mapping/reactive-process-level-procurement.csv
#: mapping/reactive-project-level-completion.csv
#: mapping/reactive-project-level-identification-preparation.csv
msgid "Description"
msgstr "Descripci√≥n"

#. Mapping from OCDS
#: mapping/reactive-process-level-contract.csv:1
msgid ""
"*Check the `/contracts/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòcontractSigned‚Äô and copy each object to the "
"`.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-contract.csv:2
msgid ""
"*Check the `/contracts/documents` array for `Document` objects with "
"`/type` set to ‚ÄòincorporationCertificate‚Äô and copy each object to the "
"`.summary.documents` array.*\n"
"\n"
"Check the `/parties` array for `Organization` objects with 'supplier' in "
"`/roles`. For each such object, copy it to the `parties` array in OC4IDS,"
" add an `OrganizationReference` object to `.summary.suppliers` and set "
"the `OrganizationReference`'s `.name` and `.id` to the `Organization`'s "
"`.name` and `.id`."
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-contract.csv:3
msgid ""
"*Check the `/contracts/documents` array for `Document` objects with "
"`/type` set to ‚ÄòtechnicalSpecifications‚Äô and copy each object to the "
"`.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-implementation.csv:1
msgid ""
"*Monitor the following fields for changes:*\n"
"\n"
"* `/contracts/value`\n"
"* `/contracts/period`\n"
"* `/contracts/description`\n"
"* `/contracts/items`\n"
"* `/contracts/implementation/milestones`\n"
"\n"
"*Copy `/contracts/amendments/description` to "
"`summary.modifications.description` and `/date` to "
"`.summary.modifications.date`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-implementation.csv:2
msgid ""
"*Check the `/contracts/documents` and "
"`/contracts/implementation/documents` arrays for `Document` objects with "
"`.documentType` set to ‚ÄòescalationApprovals‚Äô and copy each object to the "
"`.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-implementation.csv:3
msgid ""
"*Check the `/contracts/documents` and "
"`/contracts/implementation/documents` arrays for `Document` objects with "
"`.documentType` set to ‚ÄòqualityAssuranceReport‚Äô and copy each object to "
"the `.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-implementation.csv:4
msgid ""
"*Copy the contents of the `/contracts/implementation/transactions` array "
"to `.summary.transactions`.*\n"
"\n"
"*Check the `/contracts/implementation/documents` array for `Document` "
"objects with `.documentType` set to ‚ÄòpaymentCertificate‚Äô and copy each "
"object to the `.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-implementation.csv:5
msgid ""
"*Check the `/contracts/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòcontractAmendment‚Äô and copy each object to the "
"`.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-procurement.csv:1
msgid ""
"*Check the `/parties` array for `Organization` objects with "
"'administrativeEntity' in `/roles`. Copy each object to the `parties` "
"array in OC4IDS. If there is more than one procuring entity, do not set "
"`.summary.tender.procuringEntity.name` and "
"`.summary.tender.procuringEntity.id`; otherwise, set them to the "
"procuring entity's `.name` and `.id`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-procurement.csv:2
msgid ""
"Set `.summary.tender.procurementMethod` to the value of "
"`/tender/procurementMethod`."
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-procurement.csv:3
msgid ""
"*Check the `/tender/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòbiddingDocuments‚Äô and copy each object to the "
"`.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-procurement.csv:4
msgid ""
"*Check the `/tender/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòevaluationReports‚Äô and copy each object to the "
"`.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-process-level-procurement.csv:5
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòprojectDesignReport‚Äô and copy each object to the "
"`.summary.documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-completion.csv:1
msgid ""
"*Optionally, check the `/contracts/implementation` array for `Document` "
"objects with `.documentType` set to ‚ÄòphysicalProgressReport‚Äô or "
"‚ÄòfinancialProgressReport and copy each object to the `.summary.documents`"
" array.*\n"
"\n"
"*Optionally, copy the contents of the `/planning/forecasts` array to "
"`forecasts` and copy the contents of the "
"`/contracts/implementation/metrics` array to `metrics`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-completion.csv:2
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòbudgetAmendmentApproval‚Äô and copy each object to "
"the `documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-completion.csv:3
msgid ""
"*Check the `/contracts/implementation` array for `Document` objects with "
"`.documentType` set to ‚ÄòprojectCompletionReport‚Äô and copy each object to "
"the `documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-completion.csv:4
msgid ""
"*Check the `/contracts/implementation` array for `Document` objects with "
"`.documentType` set to ‚ÄòprojectEvaluation‚Äô and copy each object to the "
"`documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-completion.csv:5
msgid ""
"*Check the `/contracts/implementation` array for `Document` objects with "
"`.documentType` set to ‚ÄòtechnicalAuditReport‚Äô and copy each object to the"
" `documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-completion.csv:6
msgid ""
"*Check the `/contracts/implementation` array for `Document` objects with "
"`.documentType` set to ‚ÄòfinancialAuditReport‚Äô and copy each object to the"
" `documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-identification-preparation.csv:1
msgid ""
"*Copy the contents of `/planning/budget/budgetBreakdown` in each "
"contracting process to `budget.BudgetBreakdown`.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-identification-preparation.csv:2
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòfeasibilityStudy‚Äô and copy each object to the "
"`documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-identification-preparation.csv:3
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòenvironmentalImpact‚Äô or ‚ÄòsocialImpact‚Äô and copy "
"each object to the `documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-identification-preparation.csv:4
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòresettlementPlan‚Äô and copy each object to the "
"`documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-identification-preparation.csv:6
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòfinancialAgreement‚Äô and copy each object to the "
"`documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-identification-preparation.csv:7
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòprocurementPlan‚Äô and copy each object to the "
"`documents` array.*"
msgstr ""

#. Mapping from OCDS
#: mapping/reactive-project-level-identification-preparation.csv:8
msgid ""
"*Check the `/planning/documents` array for `Document` objects with "
"`.documentType` set to ‚ÄòbudgetApproval‚Äô and copy each object to the "
"`documents` array.*"
msgstr ""
